{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","onAdd","useState","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","isTitleError","setTitleError","isImgUrlError","setImgUrlError","isImdbUrlError","setImdbUrlError","isImdbIdError","setImdbIdError","newMovie","onSubmit","event","preventDefault","type","classNames","name","placeholder","value","onChange","target","disabled","App","state","moviesFromServer","addMovie","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cac24190.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport { useState } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (obj: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const [isTitleError, setTitleError] = useState(false);\n  const [isImgUrlError, setImgUrlError] = useState(false);\n  const [isImdbUrlError, setImdbUrlError] = useState(false);\n  const [isImdbIdError, setImdbIdError] = useState(false);\n\n  const newMovie = {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    imdbId,\n  };\n\n  const validate = () => {\n    if (!title) {\n      setTitleError(true);\n    }\n\n    if (!imgUrl) {\n      setImgUrlError(true);\n    }\n\n    if (!imdbUrl) {\n      setImdbUrlError(true);\n    }\n\n    if (!imdbId) {\n      setImdbIdError(true);\n    }\n\n    if (!title || !imgUrl || !imdbUrl || !imdbId) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  return (\n    <form\n      className=\"form\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        if (validate()) {\n          onAdd(newMovie);\n          resetForm();\n        }\n      }}\n    >\n      <input\n        type=\"text\"\n        className={\n          classNames('form__input', { 'form__input--error': isTitleError })\n        }\n        name=\"title\"\n        placeholder=\"Title\"\n        value={title}\n        onChange={(event) => {\n          setTitle(event.target.value);\n          setTitleError(false);\n        }}\n      />\n      {isTitleError && <p className=\"form__error\">Please enter a title</p>}\n\n      <input\n        type=\"text\"\n        className=\"form__input\"\n        name=\"description\"\n        placeholder=\"Description\"\n        value={description}\n        onChange={(event) => setDescription(event.target.value)}\n      />\n\n      <input\n        type=\"text\"\n        className={\n          classNames('form__input', { 'form__input--error': isImgUrlError })\n        }\n        name=\"imgUrl\"\n        placeholder=\"ImgUrl\"\n        value={imgUrl}\n        onChange={(event) => {\n          setImgUrl(event.target.value);\n          setImgUrlError(false);\n        }}\n      />\n      {isImgUrlError && <p className=\"form__error\">Please enter a ImgUrl</p>}\n\n      <input\n        type=\"text\"\n        className={\n          classNames('form__input', { 'form__input--error': isImdbUrlError })\n        }\n        name=\"imdbUrl\"\n        placeholder=\"ImdbUrl\"\n        value={imdbUrl}\n        onChange={(event) => {\n          setImdbUrl(event.target.value);\n          setImdbUrlError(false);\n        }}\n      />\n      {isImdbUrlError && <p className=\"form__error\">Please enter a ImdbUrl</p>}\n\n      <input\n        type=\"text\"\n        className={\n          classNames('form__input', { 'form__input--error': isImdbIdError })\n        }\n        name=\"imdbId\"\n        placeholder=\"ImdbId\"\n        value={imdbId}\n        onChange={(event) => {\n          setImdbId(event.target.value);\n          setImdbIdError(false);\n        }}\n      />\n      {isImdbIdError && <p className=\"form__error\">Please enter a ImdbId</p>}\n\n      <button\n        type=\"submit\"\n        disabled={isImdbIdError || isImdbUrlError\n          || isImgUrlError || isTitleError}\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(state => {\n      return {\n        movies: [\n          ...state.movies,\n          movie,\n        ],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}